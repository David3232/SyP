package claves;

import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;

public class decodificador {
	static String texto =  "Js%zs%qzlfw%ij%qf%Rfshmf1%ij%hz~t%strgwj%st%vznjwt%fhtwifwrj1%st%mf%rzhmt%ynjrut%vzj%{n{òf%zs%mnifqlt%ij%qtx%ij%qfsf%js%fxynqqjwt1%fifwlf%fsynlzf1%wthòs%kqfht%~%lfqlt%htwwjitw3%Zsf%tqqf%ij%fqlt%ræx%{fhf%vzj%hfwsjwt1%xfqunhøs%qfx%ræx%sthmjx1%izjqtx%~%vzjgwfsytx%qtx%xægfitx1%qjsyjofx%qtx%{njwsjx1%fqlÿs%ufqtrnst%ij%föfinizwf%qtx%itrnsltx1%htsxzròfs%qfx%ywjx%ufwyjx%ij%xz%mfhnjsif3";

	public static void main (String[] args) throws IOException {
		obtenerDeesplazamiento(texto);
	}
	
	// Función para obtener el caracter más repetido, que significará que es la e
	// y así restarlo y obtener el desplazamiento.
	public static int obtenerDeesplazamiento(String texto) { 
		   
		   char[] caracteres = texto.toCharArray();
		   		   
		   // Obtenemos el número de apariciones por caracter, obtenido desde internet.
	       Map<Character, Integer> charMap = new HashMap<Character, Integer>();
	       for (Character ch : caracteres) {
	           if (charMap.containsKey(ch)) {
	               charMap.put(ch, charMap.get(ch) + 1);
	           } else {
	               charMap.put(ch, 1);
	              
	           }
	       }
	       System.out.println(charMap);
	       
	    // Iterate through HashMap to print all duplicate characters of String
	       Set<Map.Entry<Character, Integer>> entrySet = charMap.entrySet();
	       
	       char keyRepetida;        
	       int posicion = 0;
	       for (Map.Entry<Character, Integer> entry : entrySet) {
	    	   System.out.println(entry.getKey());
	    	   System.out.println(entry.getValue());
	               keyRepetida=entry.getKey();
	               System.out.println("El caracter mas repetido es "+keyRepetida);
	               int asciiValue = (int) keyRepetida;
	               posicion = asciiValue - 101; // 101 => e
	               break;
	       }
	       System.out.println(posicion);
		return 0;
	}
}
